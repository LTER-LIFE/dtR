// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// average_grid_t
NumericMatrix average_grid_t(NumericMatrix in_xy2D, NumericVector in_t, NumericMatrix xyout, NumericVector range_x, NumericVector range_y, NumericVector out_t);
RcppExport SEXP _dtTools_average_grid_t(SEXP in_xy2DSEXP, SEXP in_tSEXP, SEXP xyoutSEXP, SEXP range_xSEXP, SEXP range_ySEXP, SEXP out_tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type in_xy2D(in_xy2DSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type in_t(in_tSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type xyout(xyoutSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type range_x(range_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type range_y(range_ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type out_t(out_tSEXP);
    rcpp_result_gen = Rcpp::wrap(average_grid_t(in_xy2D, in_t, xyout, range_x, range_y, out_t));
    return rcpp_result_gen;
END_RCPP
}
// intPP_mixed
NumericMatrix intPP_mixed(NumericVector zmax, NumericMatrix kd, NumericMatrix par, NumericMatrix alfa, NumericMatrix eopt, NumericMatrix pmax, NumericMatrix height);
RcppExport SEXP _dtTools_intPP_mixed(SEXP zmaxSEXP, SEXP kdSEXP, SEXP parSEXP, SEXP alfaSEXP, SEXP eoptSEXP, SEXP pmaxSEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type zmax(zmaxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type kd(kdSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type par(parSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alfa(alfaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type eopt(eoptSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pmax(pmaxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(intPP_mixed(zmax, kd, par, alfa, eopt, pmax, height));
    return rcpp_result_gen;
END_RCPP
}
// rad_bot
NumericMatrix rad_bot(NumericVector zmax, NumericMatrix kd, NumericMatrix par, NumericMatrix height);
RcppExport SEXP _dtTools_rad_bot(SEXP zmaxSEXP, SEXP kdSEXP, SEXP parSEXP, SEXP heightSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type zmax(zmaxSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type kd(kdSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type par(parSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type height(heightSEXP);
    rcpp_result_gen = Rcpp::wrap(rad_bot(zmax, kd, par, height));
    return rcpp_result_gen;
END_RCPP
}
// intPP_exp
NumericMatrix intPP_exp(NumericVector zmax, NumericVector kd, NumericVector pMud, NumericMatrix par, NumericMatrix alfa, NumericMatrix eopt, NumericMatrix pmax);
RcppExport SEXP _dtTools_intPP_exp(SEXP zmaxSEXP, SEXP kdSEXP, SEXP pMudSEXP, SEXP parSEXP, SEXP alfaSEXP, SEXP eoptSEXP, SEXP pmaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type zmax(zmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type kd(kdSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type pMud(pMudSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type par(parSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type alfa(alfaSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type eopt(eoptSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type pmax(pmaxSEXP);
    rcpp_result_gen = Rcpp::wrap(intPP_exp(zmax, kd, pMud, par, alfa, eopt, pmax));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dtTools_average_grid_t", (DL_FUNC) &_dtTools_average_grid_t, 6},
    {"_dtTools_intPP_mixed", (DL_FUNC) &_dtTools_intPP_mixed, 7},
    {"_dtTools_rad_bot", (DL_FUNC) &_dtTools_rad_bot, 4},
    {"_dtTools_intPP_exp", (DL_FUNC) &_dtTools_intPP_exp, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_dtTools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
